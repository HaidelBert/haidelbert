version: '3'
services:
  user-mongo:
    image: 'mongo'
    container_name: 'dev-mongo'
    environment:
      - MONGO_INITDB_DATABASE=user
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ./dev-mongo-volume:/data/db
    ports:
      - '27017-27019:27017-27019'
  haidelbert-postgres:
    image: postgres:11
    container_name: 'dev-postgres-container'
    environment:
      - POSTGRES_DB=accounting
      - POSTGRES_PASSWORD=root
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./dev-postgres-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    container_name: 'dev-zookeeper-container'
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./kafka/zoo1/data:/data
      - ./kafka/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    container_name: 'dev-kafka-container'
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
  minio1:
    image: minio/minio:RELEASE.2020-08-18T19-41-00Z
    container_name: 'dev-minio1-container'
    volumes:
      - dev-data1-1:/data1
      - dev-data1-2:/data2
    ports:
      - "9190:9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    command: server http://minio{1...2}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  minio2:
    image: minio/minio:RELEASE.2020-10-09T22-55-05Z
    container_name: 'dev-minio2-container'
    volumes:
      - dev-data2-1:/data1
      - dev-data2-2:/data2
    ports:
      - "9191:9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    command: server http://minio{1...2}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
volumes:
  dev-data1-1:
  dev-data1-2:
  dev-data2-1:
  dev-data2-2:
